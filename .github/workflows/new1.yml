name: Docker Image Push

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

env:
  IMAGE_NAME: dillip_image   # display image name

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: |
          python -m playwright install

      - name: Build and push Docker image to GHCR
        env:
            IMAGE_NAME: dillip_image
        run: |
            docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        
            # Construct full image ID with GHCR repository owner
            IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
            IMAGE_ID=$(echo $IMAGE_ID | tr '[:upper:]' '[:lower:]')  # Convert to lowercase
        
            # Determine version from GitHub ref (branch or tag)
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            if [[ "$VERSION" == "refs/tags/"* ]]; then
              VERSION=$(echo $VERSION | sed -e 's/^refs\/tags\///' | sed -e 's/^v//')
            else
              VERSION="latest"
            fi
        
            echo "IMAGE_ID=$IMAGE_ID"
            echo "VERSION=$VERSION"
        
            # Tag and push the Docker image
            docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION

      # - name: Pull and run Docker image from GitHub Package Registry
      #   run: |
      #    docker pull ${{ env.PACKAGE_REGISTRY_URL }}/${{ env.REPOSITORY }}
      #    docker run --detach --publish 8000:8000 ${{ env.PACKAGE_REGISTRY_URL }}/${{ env.REPOSITORY }}  
        
